{"version":3,"sources":["QuotationTable.js","App.js","reportWebVitals.js","index.js"],"names":["styles","textCenter","textAlign","textRight","QuotationTable","data","setDataItems","useState","dataRows","setDataRows","totalPriceDiscount","setTotalPriceDiscount","totalLastPice","setTotalLastPice","useEffect","discount","discountTotal","dataRow","map","v","i","amount","qty","ppu","amountDiscount","dis","key","onClick","deleteClick","style","item","numberWithCommas","splice","x","toString","replace","Container","Row","Col","Table","striped","bordered","hover","colSpan","Button","variant","App","itemRef","useRef","ppuRef","qtyRef","disRef","useLocalStorage","dataItems","dummyProductList","id","name","price","options","value","xs","backgroundColor","Form","Group","className","controlId","Label","Select","aria-label","ref","onChange","e","pid","current","product","find","Control","type","placeholder","itemObj","push","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aabe393e.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Container, Row, Col, Table, Button } from \"react-bootstrap\";\r\n\r\nimport { FaTrash } from 'react-icons/fa';\r\n\r\nconst styles = {\r\n  textCenter: { textAlign: \"center\" },\r\n  textRight: { textAlign: \"right\" },\r\n};\r\n\r\nfunction QuotationTable({ data, setDataItems }) {\r\n  const [dataRows, setDataRows] = useState();\r\n  const [totalPriceDiscount, setTotalPriceDiscount] = useState(0);\r\n  const [totalLastPice, setTotalLastPice] = useState(0);\r\n\r\n  useEffect(() => {\r\n\r\n    let discount = 0\r\n    let discountTotal = 0\r\n\r\n    const dataRow = data.map((v, i) => {\r\n\r\n      let amount = v.qty * v.ppu\r\n      let amountDiscount = v.dis * 1\r\n      let amountDiscountPerUnit = amount - amountDiscount\r\n\r\n      discountTotal += amountDiscount\r\n      \r\n      discount += amountDiscountPerUnit\r\n\r\n      return (\r\n        <tr key={i}>\r\n          <td><FaTrash onClick={() => deleteClick(i)}/></td>\r\n          <td style={styles.textCenter}>{v.qty}</td>\r\n          <td>{v.item}</td>\r\n          <td style={styles.textRight}>{numberWithCommas(v.ppu)}</td>\r\n          <td style={styles.textRight}>{numberWithCommas(amountDiscount)}</td>\r\n          <td style={styles.textRight}>{numberWithCommas(amount - amountDiscount)}</td>\r\n        </tr>\r\n      );\r\n    });\r\n    \r\n    setDataRows(dataRow)\r\n    setTotalPriceDiscount(discountTotal)\r\n    setTotalLastPice(discount)\r\n  }, [data])\r\n\r\n  const deleteClick = (i) => {\r\n    data.splice(i,1)\r\n    setDataItems([...data])\r\n  }\r\n\r\n  const numberWithCommas = (x) => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  };\r\n\r\n  const clearTable = () => {\r\n    setDataItems([])\r\n    setDataRows([])\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h1>Quotation Table</h1>\r\n        </Col>\r\n        <Col style={styles.textRight}>\r\n        </Col>\r\n      </Row>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th></th>\r\n            <th style={styles.textCenter}>Qty</th>\r\n            <th style={styles.textCenter}>Item</th>\r\n            <th style={styles.textCenter}>Price/Unit</th>\r\n            <th style={styles.textCenter}>Discount</th>\r\n            <th style={styles.textCenter}>Amount</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{dataRows}</tbody>\r\n        <tfoot>\r\n        <tr>\r\n          <th colSpan={4}></th>\r\n            <th style={styles.textCenter}>Total Discount</th>\r\n            <th style={styles.textRight}>{numberWithCommas(totalPriceDiscount)}</th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={4}></th>\r\n            <th style={styles.textCenter}>Total</th>\r\n            <th style={styles.textRight}>{numberWithCommas(totalLastPice)}</th>\r\n          </tr>\r\n          \r\n        </tfoot>\r\n      </Table>\r\n        <Button onClick={clearTable} variant=\"dark\">\r\n          Clear\r\n        </Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default QuotationTable;\r\n","import React, { useRef } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport QuotationTable from \"./QuotationTable\";\r\n\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\n\r\nimport useLocalStorage from 'react-localstorage-hook'\r\n\r\nfunction App() {\r\n  const itemRef = useRef();\r\n  const ppuRef = useRef();\r\n  const qtyRef = useRef();\r\n  const disRef = useRef();\r\n\r\n  const [dataItems, setDataItems] = useLocalStorage(\"dataItems\",[]);\r\n  \r\n\r\n\r\n  const dummyProductList = [\r\n    { id: \"p001\", name: 'Samsung LED TV 52\"', price: 15000 },\r\n    { id: \"p002\", name: \"Xiaomi Air Purifier\", price: 4000 },\r\n    { id: \"p003\", name: \"Brother Laserjet Printer\", price: 5500 },\r\n    { id: \"p004\", name: \"Bose Speaker\", price: 20000 },\r\n  ];\r\n\r\n  const addItem = () => {\r\n    if (itemRef.current.value == \"\") {\r\n      alert(\"Item name is empty\");\r\n      return;\r\n    }\r\n\r\n    const pid = itemRef.current.value;\r\n    const product = dummyProductList.find((e) => e.id === pid);\r\n\r\n    var itemObj = {\r\n      pid: pid,\r\n      item: product.name,\r\n      ppu: ppuRef.current.value,\r\n      qty: qtyRef.current.value,\r\n      dis: disRef.current.value,\r\n    };\r\n\r\n    dataItems.push(itemObj);\r\n    setDataItems([...dataItems]);   \r\n  };\r\n\r\n  const productChange = (e) => {\r\n    const pid = itemRef.current.value;\r\n    const product = dummyProductList.find((e) => e.id === pid);\r\n    ppuRef.current.value = product.price\r\n  }\r\n\r\n  const options = dummyProductList.map((v) => {\r\n    return <option value={v.id}>{v.name}</option>;\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col xs={5} style={{ backgroundColor: \"#eaeaea\" }}>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"formItem\">\r\n              <Form.Label>Item</Form.Label>\r\n              <Form.Select\r\n                aria-label=\"Default select example\"\r\n                ref={itemRef}\r\n                onChange={productChange}\r\n              >\r\n                {options}\r\n              </Form.Select>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formPrice\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Price Per Unit\"\r\n                ref={ppuRef}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formQuantity\">\r\n              <Form.Label>Quantity</Form.Label>\r\n              <Form.Control type=\"number\" placeholder=\"Quantity\" ref={qtyRef} />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formDiscount\">\r\n              <Form.Label>Discount</Form.Label>\r\n              <Form.Control type=\"number\" placeholder=\"Discount\" ref={disRef} />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"outline-dark\" onClick={addItem}>\r\n              Add\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n        <Col>\r\n          <QuotationTable data={dataItems} setDataItems={setDataItems} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}